package com.easydiameter.dictionary.avp;

import java.util.HashMap;
import java.util.Map;

import com.easydiameter.util.ProtocolDefinitions;

public class AVPDictionary implements ProtocolDefinitions {

	private static Map<AVPKey, AVPDictionaryData>	avpDictionary;

	private static AVPDictionaryData				DEFAULT_DICT_DATA	= new AVPDictionaryData("Unknown", 0, (byte) 0,
			0, DT_UNKNOWN);

	public static AVPDictionaryData getDictionaryData(long code, long vendorId) {
		AVPKey key = new AVPKey(code, vendorId);
		AVPDictionaryData dictData = avpDictionary.get(key);
		return dictData != null ? dictData : DEFAULT_DICT_DATA;
	}

	public static AVPDictionaryData add(String name, long code, byte flags, long vendorId, int dataType) {
		AVPKey key = new AVPKey(code, vendorId);

		AVPDictionaryData dictData;
		if (dataType == DT_GROUPED) {
			dictData = new GroupedAVPDictionaryData(name, code, flags, vendorId, dataType);
		} else {
			dictData = new AVPDictionaryData(name, code, flags, vendorId, dataType);
		}
		avpDictionary.put(key, dictData);

		return dictData;
	}

	static {
		avpDictionary = new HashMap<AVPKey, AVPDictionaryData>();

		AVPDictionary.add("Proxy-State", AC_PROXY_STATE, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("Host-Ip-Address", AC_HOST_IP_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_ADDRESS);
		AVPDictionary.add("Auth-Application-Id", AC_AUTH_APPLICATION_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Acct-Application-Id", AC_ACCT_APPLICATION_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Vendor-Specific-Application-Id", AC_VENDOR_SPECIFIC_APPLICATION_ID, AVP_FLAG_M,
				VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Redirect-Host-Usage", AC_REDIRECT_HOST_USAGE, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("Redirect-Max-Cache-Time", AC_REDIRECT_MAX_CACHE_TIME, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UTF8STRING);
		AVPDictionary.add("Session-Id", AC_SESSION_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("Origin-Host", AC_ORIGIN_HOST, AVP_FLAG_M, VENDOR_ID_NONE, DT_DIAMETER_IDENTITY);
		AVPDictionary.add("Supported-Vendor-Id", AC_SUPPORTED_VENDOR_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Vendor-Id", AC_VENDOR_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Firmware-Revision", AC_FIRMWARE_REVISION, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Result-Code", AC_RESULT_CODE, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Product-Name", AC_PRODUCT_NAME, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("Session-Binding", AC_SESSION_BINDING, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Session-Server-Failover", AC_SESSION_SERVER_FAILOVER, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("Multi-Round-Time-Out", AC_MULTI_ROUND_TIME_OUT, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Disconnect-Cause", AC_DISCONNECT_CAUSE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Auth-Request-Type", AC_AUTH_REQUEST_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Auth-Grace-Period", AC_AUTH_GRACE_PERIOD, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Auth-Session-State", AC_AUTH_SESSION_STATE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Origin-State-Id", AC_ORIGIN_STATE_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Failed-AVP", AC_FAILED_AVP, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Proxy-Host", AC_PROXY_HOST, AVP_FLAG_M, VENDOR_ID_NONE, DT_DIAMETER_IDENTITY);
		AVPDictionary.add("Error-Message", AC_ERROR_MESSAGE, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("Route-Record", AC_ROUTE_RECORD, AVP_FLAG_M, VENDOR_ID_NONE, DT_DIAMETER_IDENTITY);
		AVPDictionary.add("Destination-Realm", AC_DESTINATION_REALM, AVP_FLAG_M, VENDOR_ID_NONE, DT_DIAMETER_IDENTITY);
		AVPDictionary.add("Proxy-Info", AC_PROXY_INFO, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Re-Auth-Request-Type", AC_RE_AUTH_REQUEST_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Accounting-Sub-Session-Id", AC_ACCOUNTING_SUB_SESSION_ID, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_64);
		AVPDictionary.add("Authorization-Lifetime", AC_AUTHORIZATION_LIFETIME, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("Redirect-Host", AC_REDIRECT_HOST, AVP_FLAG_M, VENDOR_ID_NONE, DT_DIAMETER_URI);
		AVPDictionary.add("Destination-Host", AC_DESTINATION_HOST, AVP_FLAG_M, VENDOR_ID_NONE, DT_DIAMETER_IDENTITY);
		AVPDictionary.add("Error-Reporting-Host", AC_ERROR_REPORTING_HOST, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_DIAMETER_IDENTITY);
		AVPDictionary.add("Termination-Cause", AC_TERMINATION_CAUSE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Origin-Realm", AC_ORIGIN_REALM, AVP_FLAG_M, VENDOR_ID_NONE, DT_DIAMETER_IDENTITY);
		AVPDictionary.add("Experimental-Result", AC_EXPERIMENTAL_RESULT, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Experimental-Result-Code", AC_EXPERIMENTAL_RESULT_CODE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("Inband-Security-Id", AC_INBAND_SECURITY_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("E2E-Sequence", AC_E2E_SEQUENCE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("DRMP", AC_DRMP, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("MIP-FA-To-HA-SPI", AC_MIP_FA_TO_HA_SPI, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("MIP-FA-To-MN-SPI", AC_MIP_FA_TO_MN_SPI, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("MIP-Reg-Request", AC_MIP_REG_REQUEST, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("MIP-Reg-Reply", AC_MIP_REG_REPLY, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("MIP-MN-AAA-Auth", AC_MIP_MN_AAA_AUTH, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("MIP-HA-To-FA-SPI", AC_MIP_HA_TO_FA_SPI, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("MIP-MN-To-FA-MSA", AC_MIP_MN_TO_FA_MSA, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("MIP-FA-To-MN-MSA", AC_MIP_FA_TO_MN_MSA, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("MIP-FA-To-HA-MSA", AC_MIP_FA_TO_HA_MSA, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("MIP-HA-To-FA-MSA", AC_MIP_HA_TO_FA_MSA, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("MIP-MN-To-HA-MSA", AC_MIP_MN_TO_HA_MSA, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("MIP-HA-To-MN-MSA", AC_MIP_HA_TO_MN_MSA, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);

		AVPDictionary.add("MIP-Mobile-Node-Address", AC_MIP_MOBILE_NODE_ADRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_ADDRESS);
		AVPDictionary.add("MIP-Home-Agent-Address", AC_MIP_HOME_AGENT_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_ADDRESS);
		AVPDictionary.add("MIP-Nonce", AC_MIP_NONCE, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("MIP-Candidate-Home-Agent-Host", AC_MIP_CANDIDATE_HOME_AGENT_HOST, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_DIAMETER_IDENTITY);
		AVPDictionary.add("MIP-Feature-Vector", AC_MIP_FEATURE_VECTOR, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("MIP-Auth-Input-Data-Length", AC_MIP_AUTH_INPUT_DATA_LENGTH, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("MIP-Authenticator-Length", AC_MIP_AUTHENTICATOR_LENGTH, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("MIP-Authenticator-Offset", AC_MIP_AUTHENTICATOR_OFFSET, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("MIP-MN-AAA-SPI", AC_MIP_MN_AAA_SPI, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("MIP-Filter-Rule", AC_MIP_FILTER_RULE, AVP_FLAG_M, VENDOR_ID_NONE, DT_IP_FILTER_RULE);
		AVPDictionary.add("MIP-Session-Key", AC_MIP_SESSION_KEY, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("MIP-FA-Challenge", AC_MIP_FA_CHALLENGE, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("MIP-Algorithm-Type", AC_MIP_ALGORITHM_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("MIP-Replay-Mode", AC_MIP_REPLAY_MODE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("MIP-Originating-Foreign-AAA", AC_MIP_ORIGINATING_FOREIGN_AAA, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_GROUPED);
		AVPDictionary.add("MIP-Home-Agent-Host", AC_MIP_HOME_AGENT_HOST, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Accounting-Input-Octets", AC_ACCOUNTING_INPUT_OCTETS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("Accounting-Output-Octets", AC_ACCOUNTING_OUTPUT_OCTETS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("Accounting-Input-Packets", AC_ACCOUNTING_INPUT_PACKETS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("Accounting-Output-Packets", AC_ACCOUNTING_OUTPUT_PACKETS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("MIP_MSA_Lifetime", AC_MIP_MSA_LIFETIME, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("SIP-Accounting-Information", AC_SIP_ACCOUNTING_INFORMATION, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_GROUPED);
		AVPDictionary.add("SIP-Accounting-Server-URI", AC_SIP_ACCOUNTING_SERVER_URI, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_DIAMETER_IDENTITY);
		AVPDictionary.add("SIP-Credit-Control-Server-URI", AC_SIP_CREDIT_CONTROL_SERVER_URI, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_DIAMETER_IDENTITY);
		AVPDictionary.add("SIP-Server-URI", AC_SIP_SERVER_URI, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("SIP-Server-Capabilities", AC_SIP_SERVER_CAPABILITIES, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_GROUPED);
		AVPDictionary.add("SIP-Mandatory-Capability", AC_SIP_MANDATORY_CAPABILITY, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("SIP-Optional-Capability", AC_SIP_OPTIONAL_CAPABILITY, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("SIP-Server-Assignment-Type", AC_SIP_SERVER_ASSIGNMENT_TYPE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("SIP-Auth-Data-Item", AC_SIP_AUTH_DATA_ITEM, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("SIP-Authentication-Scheme", AC_SIP_AUTHENTICATION_SCHEME, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("SIP-Item-Number", AC_SIP_ITEM_NUMBER, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("SIP-Authenticate", AC_SIP_AUTHENTICATE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("SIP-Authorization", AC_SIP_AUTHORIZATION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("SIP-Authentication-Info", AC_SIP_AUTHENTICATION_INFO, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_GROUPED);
		AVPDictionary.add("SIP-Number-Auth-Items", AC_SIP_NUMBER_AUTH_ITEMS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("SIP-Deregistration-Reason", AC_SIP_DEREGISTRATION_REASON, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_GROUPED);
		AVPDictionary.add("SIP-Reason-Code", AC_SIP_REASON_CODE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("SIP-Reason-Info", AC_SIP_REASON_INFO, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("SIP-Visited-Network-Id", AC_SIP_VISITED_NETWORK_ID, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UTF8STRING);
		AVPDictionary.add("SIP-User-Authorization-Type", AC_SIP_USER_AUTHORIZATION_TYPE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("SIP-Supported-User-Data-Type", AC_SIP_SUPPORTED_USER_DATA_TYPE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UTF8STRING);
		AVPDictionary.add("SIP-User-Data", AC_SIP_USER_DATA, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("SIP-User-Data-Type", AC_SIP_USER_DATA_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("SIP-User-Data-Contents", AC_SIP_USER_DATA_CONTENTS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("SIP-User-Data-Already-Available", AC_SIP_USER_DATA_ALREADY_AVAILABLE, AVP_FLAG_M,
				VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("SIP-Method", AC_SIP_METHOD, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("NAS-Filter-Rule", AC_NAS_FILTER_RULE, AVP_FLAG_M, VENDOR_ID_NONE, DT_IP_FILTER_RULE);
		AVPDictionary.add("Tunneling", AC_TUNNELING, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("CHAP-Auth", AC_CHAP_AUTH, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("CHAP-Algorithm", AC_CHAP_ALGORTIHM, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("CHAP-Ident", AC_CHAP_IDENT, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("CHAP-Response", AC_CHAP_RESPONSE, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("Accounting-Auth-Method", AC_ACCOUNTING_AUTH_METHOD, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("QoS-Filter-Rule", AC_QoS_FILTER_RULE, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_QoS_FILTER_RULE);
		AVPDictionary.add("Origin-AAA-Protocol", AC_ORIGIN_AAA_PROTOCOL, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("CC-Correlation-Id", AC_CC_CORRELATION_ID, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("CC-Input-Octets", AC_CC_INPUT_OCTETS, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_64);
		AVPDictionary.add("CC-Money", AC_CC_MONEY, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("CC-Output-Octets", AC_CC_OUTPUT_OCTETS, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UNSIGNED_64);
		AVPDictionary.add("CC-Request-Number", AC_CC_REQUEST_NUMBER, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("CC-Request-Type", AC_CC_REQUEST_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("CC-Service-Specific-Units", AC_CC_SERVICE_SPECIFIC_UNITS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_64);
		AVPDictionary.add("CC-Session-Failover", AC_CC_SESSION_FAILOVER, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("CC-Sub-Session-Id", AC_CC_SUB_SESSION_ID, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UNSIGNED_64);
		AVPDictionary.add("CC-Time", AC_CC_TIME, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("CC-Total-Octets", AC_CC_TOTAL_OCTETS, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_64);
		AVPDictionary.add("Check-Balance-Result", AC_CHECK_BALANCE_RESULT, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Cost-Information", AC_COST_INFORMATION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Cost-Unit", AC_COST_UNIT, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("Currency-Code", AC_CURRENCY_CODE, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Credit-Control", AC_CREDIT_CONTROL, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Credit-Control-Failure-Handling", AC_CREDIT_CONTROL_FAILURE_HANDLING, AVP_FLAG_M,
				VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Direct-Debiting-Failure-Handling", AC_CREDIT_CONTROL_FAILURE_HANDLING, AVP_FLAG_M,
				VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Exponent", AC_EXPONENT, AVP_FLAG_M, VENDOR_ID_NONE, DT_INTEGER_32);
		AVPDictionary.add("Final-Unit-Indication", AC_FINAL_UNIT_INDICATION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Granted-Service-Unit", AC_GRANTED_SERVICE_UNIT, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Rating-Group", AC_RATING_GROUP, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Redirect-Address-Type", AC_REDIRECT_ADDRESS_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Redirect-Server", AC_REDIRECT_SERVER, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Redirect-Server-Address", AC_REDIRECT_SERVER_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UTF8STRING);
		AVPDictionary.add("Request-Action", AC_REQUEST_ACTION, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Request-Service-Unit", AC_REQUEST_SERVICE_UNIT, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Restriction-Filter-Rule", AC_RESTRICTION_FILTER_RULE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_IP_FILTER_RULE);
		AVPDictionary.add("Service-Identifier", AC_SERVICE_IDENTIFIER, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Service-Parameter-Info", AC_SERVICE_PARAMETER_INFO, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_GROUPED);
		AVPDictionary.add("Service-Parameter-Type", AC_SERVICE_PARAMETER_TYPE, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("Service-Parameter-Value", AC_SERVICE_PARAMETER_TYPE, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("Subscription-Id", AC_SUBSCRIPTION_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Subscription-Id-Data", AC_SUBSCRIPTION_ID_DATA, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("Unit-Value", AC_UNIT_VALUE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Used-Service-Unit", AC_USED_SERVICE_UNIT, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Value-Digits", AC_VALUE_DIGITS, AVP_FLAG_M, VENDOR_ID_NONE, DT_INTEGER_64);
		AVPDictionary.add("Validity-Time", AC_VALIDITY_TIME, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Final-Unit-Action", AC_FINAL_UNIT_ACTION, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Subscription-Id-Type", AC_SUBSCRIPTION_ID_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Tariff-Time-Change", AC_TARIFF_TIME_CHANGE, AVP_FLAG_M, VENDOR_ID_NONE, DT_TIME);
		AVPDictionary.add("Tariff-Change-Usage", AC_TARIFF_CHANGE_USAGE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("G-S-U-Pool-Identifier", AC_G_S_U_POOL_IDENTIFIER, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("CC-Unit-Type", AC_CC_UNIT_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Multiple-Service-Indicator", AC_MULTIPLE_SERVICES_INDICATOR, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("Multiple-Service-Credit-Control", AC_MULTIPLE_SERVICES_CREDIT_CONTROL, AVP_FLAG_M,
				VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("G-S-U-Pool-Reference", AC_G_S_U_POOL_REFERENCE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("User-Equipment-Info", AC_USER_EQUIPMENT_INFO, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("User-Equipment-Info-Type", AC_USER_EQUIPMENT_INFO_TYPE, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("User-Equipment-Info-Value", AC_USER_EQUIPMENT_INFO_VALUE, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("Service-Context-Id", AC_SERVICE_CONTEXT_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("EAP-Payload", AC_EAP_PAYLOAD, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("EAP-Reissued-Payload", AC_EAP_REISSUED_PAYLOAD, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("EAP-Master-Session-Key", AC_EAP_MASTER_SESSION_KEY, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("Accounting-EAP-Auth-Method", AC_ACCOUNTING_EAP_AUTH_METHOD, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_64);
		AVPDictionary.add("Accounting-Record-Type", AC_ACCOUNTING_RECORD_TYPE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("Accounting-Realtime-Required", AC_ACCOUNTING_REALTIME_REQUIRED, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("Accounting-Record-Number", AC_ACCOUNTING_RECORD_NUMBER, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("MIP6-Agent-Info", AC_MIP6_AGENT_INFO, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("MIP-Careof-Address", AC_MIP_CAREOF_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_ADDRESS);
		AVPDictionary.add("MIP-Authenticator", AC_MIP_AUTHENTICATOR, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("MIP-MAC-Mobility-Data", AC_MIP_MAC_MOBILITY_DATA, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("MIP-Timestamp", AC_MIP_TIMESTAMP, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("MIP-MN-HA-SPI", AC_MIP_MN_HA_SPI, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("MIP-MN-HA-MSA", AC_MIP_MN_HA_MSA, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Service-Selection", AC_SERVICE_SELECTION, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("MIP6-Auth-Mode", AC_MIP6_AUTH_MODE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("TMOD-1", AC_TMOD_1, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Token-Rate", AC_TOKEN_RATE, AVP_FLAG_M, VENDOR_ID_NONE, DT_FLOAT_32);
		AVPDictionary.add("Buket-Depth", AC_BUCKET_DEPTH, AVP_FLAG_M, VENDOR_ID_NONE, DT_FLOAT_32);
		AVPDictionary.add("Peak-Traffic-Rate", AC_PEAK_TRAFFIC_RATE, AVP_FLAG_M, VENDOR_ID_NONE, DT_FLOAT_32);
		AVPDictionary.add("Minimum-Policed-Unit", AC_MINIMUM_POLICED_UNIT, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Maximum-Packet-Size", AC_MAXIMUM_PACKET_SIZE, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("TMOD-2", AC_TMOD_2, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Bandwith", AC_BANDWITH, AVP_FLAG_M, VENDOR_ID_NONE, DT_FLOAT_32);
		AVPDictionary.add("PHB-Class", AC_PHB_CLASS, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("PMIP6-DHCP-Server-Address", AC_PMIP6_DHCP_SERVER_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ADDRESS);
		AVPDictionary.add("PMIP6-IPv4-Home-Address", AC_PMIP6_IPV4_HOME_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ADDRESS);
		AVPDictionary.add("Mobile-Node-Identifier", AC_MOBILE_NODE_IDENTIFIER, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UTF8STRING);
		AVPDictionary.add("Service-Configuration", AC_SERVICE_CONFIGURATION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("QoS-Resources", AC_QoS_RESOURCES, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Filter-Rule", AC_FILTER_RULE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Filter-Rule-Precedence", AC_FILTER_RULE_PRECEDENCE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("Classifier", AC_CLASSIFIER, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Classifier-Id", AC_CLASSIFIER_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("Protocol", AC_PROTOCOL, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Direction", AC_DIRECTION, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("From-Spec", AC_FROM_SPEC, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("To-Spec", AC_TO_SPEC, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Negated", AC_NEGATED, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Ip-Address", AC_IP_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_ADDRESS);
		AVPDictionary.add("Ip-Address-Range", AC_IP_ADDRESS_RANGE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Ip-Address-Start", AC_IP_ADDRESS_START, AVP_FLAG_M, VENDOR_ID_NONE, DT_ADDRESS);
		AVPDictionary.add("Ip-Address-End", AC_IP_ADDRESS_END, AVP_FLAG_M, VENDOR_ID_NONE, DT_ADDRESS);
		AVPDictionary.add("Ip-Address-Mask", AC_PHB_CLASS, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Ip-Mask-Bit-Mask-Width", AC_IP_MASK_BIT_MASK_WIDTH, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("MAC-Address", AC_MAC_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("MAC-Address-Mask", AC_MAC_ADDRESS_MASK, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("MAC-Address-Mask-Pattern", AC_MAC_ADDRESS_MASK_PATTERN, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("EUI64-Address", AC_EUI64_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("EUI64-Address-Mask", AC_EUI64_ADDRESS_MASK, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("EUI64-Address-Mask-Pattern", AC_EUI64_ADDRESS_MASK_PATTERN, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("Port", AC_PORT, AVP_FLAG_M, VENDOR_ID_NONE, DT_INTEGER_32);
		AVPDictionary.add("Port-Range", AC_PORT_RANGE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Port-Start", AC_PORT_START, AVP_FLAG_M, VENDOR_ID_NONE, DT_INTEGER_32);
		AVPDictionary.add("Port-End", AC_PORT_END, AVP_FLAG_M, VENDOR_ID_NONE, DT_INTEGER_32);
		AVPDictionary.add("Use-Assigned-Address", AC_USE_ASSIGNED_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Diffserv-Code-Point", AC_DIFFSERV_CODE_POINT, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Fragmentation-Flag", AC_FRAGMENTATION_FLAG, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("IP-Option", AC_IP_OPTION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("IP-Option-Type", AC_IP_OPTION_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("IP-Option-Value", AC_IP_OPTION_VALUE, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("TCP-Option", AC_TCP_OPTION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("TCP-Option-Type", AC_TCP_OPTION_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("TCP-Option-Value", AC_TCP_OPTION_VALUE, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("TCP-Flags", AC_TCP_FLAGS, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("TCP-Flag-Type", AC_TCP_FLAG_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("ICMP-Type", AC_ICMP_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("ICMP-Type-Number", AC_ICMP_TYPE_NUMBER, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("ICMP-Code", AC_ICMP_CODE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("ETH-Option", AC_ETH_OPTION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("ETH-Proto-Type", AC_ETH_PROTO_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("ETH-Ether-Type", AC_ETH_ETHER_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("ETH-SAP", AC_ETH_SAP, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("VLAN-ID-Range", AC_VLAN_ID_RANGE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("S-VID-Start", AC_S_VID_START, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("S-VID-End", AC_S_VID_END, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("C-VID-Start", AC_C_VID_START, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("C-VID-End", AC_C_VID_END, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("User-Priority-Range", AC_USER_PRIORITY_RANGE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Low-User-Priority", AC_LOW_USER_PRIORITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("High-User-Priority", AC_HIGH_USER_PRIORITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Time-Of-Day-Condition", AC_TIME_OF_DAY_CONDITION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Time-Of-Day-Start", AC_TIME_OF_DAY_START, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Time-Of-Day-End", AC_TIME_OF_DAY_END, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Day-Of-Week-Mask", AC_DAY_OF_WEEK_MASK, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Day-Of-Month-Mask", AC_DAY_OF_MONTH_MASK, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Month-Of-Year-Mask", AC_MONTH_OF_YEAR_MASK, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Absolute-Start-Time", AC_ABSOLUTE_START_TIME, AVP_FLAG_M, VENDOR_ID_NONE, DT_TIME);
		AVPDictionary.add("Absolute-Start-Fractional-Seconds", AC_ABSOLUTE_START_FRACTIONAL_SECONDS, AVP_FLAG_M,
				VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Absolute-End-Time", AC_ABSOLUTE_END_TIME, AVP_FLAG_M, VENDOR_ID_NONE, DT_TIME);
		AVPDictionary.add("Absolute-End-Fractional-Seconds", AC_ABSOLUTE_END_FRACTIONAL_SECONDS, AVP_FLAG_M,
				VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Timezone-Flag", AC_TIMEZONE_FLAG, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Timezone-Offset", AC_TIMEZONE_OFFSET, AVP_FLAG_M, VENDOR_ID_NONE, DT_INTEGER_32);
		AVPDictionary.add("Treatment-Action", AC_TREATMENT_ACTION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("QoS-Profile-Id", AC_QoS_PROFILE_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("QoS-Profile-Template", AC_QoS_PROFILE_TEMPLATE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("QoS-Semantics", AC_QoS_SEMANTICS, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("QoS-Parameters", AC_QoS_PARAMETERS, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Excess-Treatment", AC_EXCESS_TREATMENT, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("QoS-Capability", AC_QoS_CAPABILITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("QoS-Authorization-Data", AC_QoS_AUTHORIZATION_DATA, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("Bound-Auth-Session-Id", AC_BOUND_AUTH_SESSION_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("Key", AC_KEY, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Key-Type", AC_KEY_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Keying-Material", AC_KEYING_MATERIAL, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("Key-Lifetime", AC_KEY_LIFETIME, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Key-SPI", AC_KEY_SPI, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Key-Name", AC_KEY_NAME, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("IKEv2-Nonces", AC_IKEv2_NONCES, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("NI", AC_NI, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("NR", AC_NR, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("IKEv2-Identity", AC_IKEv2_IDENTITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Initiator-Identity", AC_INITIATOR_IDENTITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Id-Type", AC_ID_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Identification-Data", AC_IDENTIFICATION_DATA, AVP_FLAG_M, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("Responder-Identity", AC_RESPONDER_IDENTITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("NC-Request-Type", AC_NC_REQUEST_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("NAT-Control-Install", AC_NAT_CONTROL_INSTALL, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("NAT-Control-Remove", AC_NAT_CONTROL_REMOVE, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("NAT-Control-Definition", AC_NAT_CONTROL_DEFINITION, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("NAT-Internal-Address", AC_NAT_INTERNAL_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("NAT-External-Address", AC_NAT_EXTERNAL_ADDRESS, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Max-NAT-Bindings", AC_MAX_NAT_BINDINGS, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("NAT-Control-Binding-Template", AC_NAT_CONTROL_BINDING_TEMPLATE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("Duplicate-Session-Id", AC_DUPLICATE_SESSION_ID, AVP_FLAG_M, VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("NAT-External-Port-Style", AC_NAT_EXTERNAL_PORT_STYLE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("NAT-Control-Record", AC_NAT_CONTROL_RECORD, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("NAT-Control-Binding-Status", AC_NAT_CONTROL_BINDING_STATUS, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_ENUMERATED);
		AVPDictionary.add("Current-NAT-Bindings", AC_CURRENT_NAT_BINDINGS, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Dual-Priority", AC_DUAL_PRIORITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Preemtion-Priority", AC_PREEMPTION_PRIORITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32); // Unsigned16?
		AVPDictionary.add("Defending-Priority", AC_DEFENDING_PRIORITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32); // Unsigned16?
		AVPDictionary.add("Admission-Priority", AC_ADMISSION_PRIORITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32); // Unsigned8?
		AVPDictionary.add("SIP-Resource-Priority", AC_SIP_RESOURCE_PRIORITY, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("SIP-Resource-Priority-Namespace", AC_SIP_RESOURCE_PRIORITY_NAMESPACE, AVP_FLAG_M,
				VENDOR_ID_NONE, DT_UTF8STRING);
		AVPDictionary.add("SIP-Resource-Priority-Value", AC_SIP_RESOURCE_PRIORITY_VALUE, AVP_FLAG_M, VENDOR_ID_NONE,
				DT_UTF8STRING);
		AVPDictionary.add("Application-Level-Resource-Priority", AC_APPLICATION_LEVEL_RESOURCE_PRIORITY, AVP_FLAG_M,
				VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("ALRP-Namespace", AC_ALRP_NAMESPACE, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("ALRP-Value", AC_ALRP_VALUE, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("ERP-RK-Request", AC_ERP_RK_REQUEST, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("ERP-Realm", AC_ERP_REALM, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_DIAMETER_IDENTITY);
		AVPDictionary.add("Redirect-Realm", AC_REDIRECT_REALM, AVP_FLAG_M, VENDOR_ID_NONE, DT_DIAMETER_IDENTITY);
		AVPDictionary.add("OC-Supported-Features", AC_OC_SUPPORTED_FEATURES, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("OC-Feature-Vector", AC_OC_FEATURE_VECTOR, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UNSIGNED_64);
		AVPDictionary.add("OC-OLR", AC_OC_OLR, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("OC-Sequence-Number", AC_OC_SEQUENCE_NUMBER, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UNSIGNED_64);
		AVPDictionary.add("OC-Validity-Duration", AC_OC_VALIDITY_DURATION, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("OC-Report-Type", AC_OC_REPORT_TYPE, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("OC-Reduction-Percentage", AC_OC_REDUCTION_PERCENTAGE, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_UNSIGNED_32);
		AVPDictionary.add("ECN-IP-Codepoint", AC_ECN_IP_CODEPOINT, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Congestion-Treatment", AC_CONGESTION_TREATMENT, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Flow-Count", AC_FLOW_COUNT, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_64);
		AVPDictionary.add("Packet-Count", AC_PACKET_COUNT, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_64);
		AVPDictionary.add("IP-Prefix-Length", AC_IP_PREFIX_LENGTH, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("Border-Router-Name", AC_BORDER_ROUTER_NAME, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_OCTET_STRING);
		AVPDictionary.add("64-Multicast-Attributes", AC_64_MULTICAST_ATTRIBUTES, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_GROUPED);
		AVPDictionary.add("ASM-MPrefix64", AC_ASM_MPREFIX64, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("SSM-MPrefix64", AC_SSM_MPREFIX64, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Tunnel-Source-Pref-or-Addr", AC_TUNNEL_SOURCE_PREF_OR_ADDR, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_GROUPED);
		AVPDictionary.add("Tunnel-Source-IPv6-Address", AC_TUNNEL_SOURCE_IPv6_ADDRESS, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_ADDRESS);
		AVPDictionary.add("Port-Set-Identifier", AC_PORT_SET_IDENTIFIER, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_OCTET_STRING);
		AVPDictionary.add("LW4O6-Binding", AC_LW4O6_BINDING, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("LW4O6-External-IPv4-Addr", AC_LW4O6_EXTERNAL_IPv4_ADDR, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_ADDRESS);
		AVPDictionary.add("Map-E-Attributes", AC_MAP_E_ATTRIBUTES, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Map-Mesh-Mode", AC_MAP_MESH_MODE, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Map-Mapping-Rule", AC_MAP_MAPPING_RULE, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Rule-IPv4-Addr-or-Prefix", AC_RULE_IPv4_ADDR_OR_PREFIX, AVP_FLAG_NONE, VENDOR_ID_NONE,
				DT_GROUPED);
		AVPDictionary.add("Rule-IPv6-Prefix", AC_RULE_IPv6_PREFIX, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("EA-Field-Length", AC_EA_FIELD_LENGTH, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UNSIGNED_32);
		AVPDictionary.add("OC-Peer-Algo", AC_OC_PEER_ALGO, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_UNSIGNED_64);
		AVPDictionary.add("SourceID", AC_SOURCEID, AVP_FLAG_NONE, VENDOR_ID_NONE, DT_DIAMETER_IDENTITY);
		AVPDictionary.add("Load", AC_LOAD, AVP_FLAG_M, VENDOR_ID_NONE, DT_GROUPED);
		AVPDictionary.add("Load-Type", AC_LOAD_TYPE, AVP_FLAG_M, VENDOR_ID_NONE, DT_ENUMERATED);
		AVPDictionary.add("Load-Value", AC_LOAD_VALUE, AVP_FLAG_M, VENDOR_ID_NONE, DT_UNSIGNED_64);

	}

}
